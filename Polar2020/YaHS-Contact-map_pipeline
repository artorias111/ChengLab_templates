#!/usr/bin/env bash
set -ex

# A Shell script wrapper for Polar2020 to run YaHS, in order to scaffold assemblies generated by Hifiasm using HiC raw reads, and to generate the hic contact map for manual curation. 

# prerequisites : 
# 1. activate the conda env for salsa
# conda activate /data2/work/local/miniconda/envs/salsa
# 2. make sure the assembly file is indexed with samtools, and it's in the same directory as the fasta file
#       You can index a fasta file using `samtools faidx genome.fa`

# Please COPY this script in another directory before modifying/running the script

# Required parameters: 
# -g assembly 
# -a read pair 1 
# -b read pair 2 

# PLEASE provide the ABSOLUTE PATH for the files, or make symlinks

# Example run : ./YaHS-Contact-map_pipeline -g dele_asm.fa -a dele_R1.fq.gz -b dele_R2.fq.gz


# -----------------------------------------

assembly=""
r1=""
r2=""
bed_file=""

while getopts ":g:a:b:" opt; do
    case $opt in 
        g)
            echo "Assembly file is in $OPTARG" >&2
            assembly=$OPTARG
            ;;
        a)
            r1=$OPTARG
            ;;
        b)
            r2=$OPTARG
            ;;
    esac
done;

# ---------------------------------------------


# part 1 : run bowtie2 on the mate pair reads

echo "Aligning Hi-C reads"

# BT2_HOME=/data2/work/local/miniconda/envs/salsa/bin
# step 1
# $BT2_HOME/bowtie2-build $assembly genome_index -p 120 |& tee bt2_index.tmux.log
# step 2
# $BT2_HOME/bowtie2 --local -p 120 -x genome_index -U $r1,$r2 2>bt2.err.log | samtools sort --threads 120 -o aligned.bam 

# Part 1 : Run bwa-mem2
#
# Index the assembly

bwa-mem2 index $assembly 2> bwa_index.err.log

# Run the aligner
bwa-mem2 mem -SP5M -t 120 $assembly $r1 $r2 | /data2/work/local/samblaster/samblaster |samtools view -h -b -F 2316 --threads 120 -o aligned.bam



# part 2 : run yahs

echo "Runing YaHS"
/data2/work/local/yahs/yahs $assembly aligned.bam |& tee yahs.tmux.log

# Part 2.5: run QUAST in the background for the YAHS assembly

echo "Scaffolding done! Running QUAST in the background"
quast -o QUAST -t 16 yahs.out_scaffolds_final.fa &


echo "Creating Hi-C heatmap"
# Part 3 : Generate the HiC contact map
contigs_index="${assembly}.fai"
yahs_scaffold_bin_file=yahs.out.bin
yahs_scaffold_agp_file=yahs.out_scaffolds_final.agp
juicer_tools="/data2/work/local/juicer_tools/juicer_tools.2.20.00.jar"


# ------


/data2/work/local/yahs/juicer pre -a -o out_JBAT $yahs_scaffold_bin_file $yahs_scaffold_agp_file $contigs_index >out_JBAT.log 2>&1

# Filter the juicer command output for the downstread command
Juicer_cmd=$(grep 'JUICER_PRE CMD' out_JBAT.log | sed 's/JUICER_PRE CMD: //' | sed 's/\[I::main_pre\]//' | sed 's/Xmx36G/Xmx400G/') # Chang the memory of the last bit, i might have to re-evaluate this part. 

# Run Juicer command
eval "$Juicer_cmd"

# Example command, for gadus ogac
# java -Xmx36G -jar ${juicer_tools} pre out_JBAT.txt out_JBAT.hic <(echo "assembly 606828627")
